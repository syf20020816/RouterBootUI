@use "./src/mixins/mixins.scss" as *;
@use "./src/common/var.scss" as *;
@use "./src/color/index.scss" as *;
@use "sass:map";

$component: "flexboxItem";

@include buildContainer($component) {
  height: 100%;
  width: 100%;
  .flexboxItem-enter-active,
  .flexboxItem-leave-active {
    transition: transform 0.4s ease-in-out;
  }
  
  .flexboxItem-enter-from,
  .flexboxItem-leave-to {
    transform: scaleY(0);
  }
  
  @include buildWrap("item", "header") {
    width: calc(100% - 2 * $padding-default-w);
    padding: $padding-default-h $padding-default-w;
    display: flex;
    align-items: center;
    justify-content: space-between;
    @include build("header", "main") {
      width: calc(100% - 36px);
      display: flex;
    align-items: center;
    justify-content: flex-start;
    }
  }
  @include buildWrap("item", "content") {
    height: auto;
    width: calc(100% - 2 * $padding-default-w);
    padding: 2 * $padding-default-h $padding-default-w;
    text-align: left;
  }

  @at-root {
    @each $type in $theme-types {
      @include when($component, $type) {
        color: map-get($font-colors, $type);
        background-color: map-get($colors, $type);
        // box-shadow: 0px 0px 1px 2px map-get($shadow-colors , $type,'deep'),0px 0px 1px 1px map-get($shadow-colors , $type,'weak');
        &:hover {
          filter: brightness(1.2);
        }
        @include buildWrap("item", "header") {
          background-color: map-get($shadow-colors, $type, "deep");
        }
      }
    }
  }
}

